@font-face {
    font-family: Geist;
    font-style: normal;
    font-weight: 100 900;
    font-display: swap;
    src: url(/_next/static/media/8d697b304b401681-s.woff2) format("woff2");
    unicode-range: u+0301, u+0400-045f, u+0490-0491, u+04b0-04b1, u+2116
}

@font-face {
    font-family: Geist;
    font-style: normal;
    font-weight: 100 900;
    font-display: swap;
    src: url(/_next/static/media/ba015fad6dcf6784-s.woff2) format("woff2");
    unicode-range: u+0100-02ba, u+02bd-02c5, u+02c7-02cc, u+02ce-02d7, u+02dd-02ff, u+0304, u+0308, u+0329, u+1d00-1dbf, u+1e00-1e9f, u+1ef2-1eff, u+2020, u+20a0-20ab, u+20ad-20c0, u+2113, u+2c60-2c7f, u+a720-a7ff
}

@font-face {
    font-family: Geist;
    font-style: normal;
    font-weight: 100 900;
    font-display: swap;
    src: url(/_next/static/media/569ce4b8f30dc480-s.p.woff2) format("woff2");
    unicode-range: u+00??, u+0131, u+0152-0153, u+02bb-02bc, u+02c6, u+02da, u+02dc, u+0304, u+0308, u+0329, u+2000-206f, u+20ac, u+2122, u+2191, u+2193, u+2212, u+2215, u+feff, u+fffd
}

@font-face {
    font-family: Geist Fallback;
    src: local("Arial");
    ascent-override: 95.94%;
    descent-override: 28.16%;
    line-gap-override: 0.00%;
    size-adjust: 104.76%
}

.__className_5cfdac {
    font-family: Geist, Geist Fallback;
    font-style: normal
}

.__variable_5cfdac {
    --font-geist-sans: "Geist", "Geist Fallback"
}

@font-face {
    font-family: Geist Mono;
    font-style: normal;
    font-weight: 100 900;
    font-display: swap;
    src: url(/_next/static/media/9610d9e46709d722-s.woff2) format("woff2");
    unicode-range: u+0301, u+0400-045f, u+0490-0491, u+04b0-04b1, u+2116
}

@font-face {
    font-family: Geist Mono;
    font-style: normal;
    font-weight: 100 900;
    font-display: swap;
    src: url(/_next/static/media/747892c23ea88013-s.woff2) format("woff2");
    unicode-range: u+0100-02ba, u+02bd-02c5, u+02c7-02cc, u+02ce-02d7, u+02dd-02ff, u+0304, u+0308, u+0329, u+1d00-1dbf, u+1e00-1e9f, u+1ef2-1eff, u+2020, u+20a0-20ab, u+20ad-20c0, u+2113, u+2c60-2c7f, u+a720-a7ff
}

@font-face {
    font-family: Geist Mono;
    font-style: normal;
    font-weight: 100 900;
    font-display: swap;
    src: url(/_next/static/media/93f479601ee12b01-s.p.woff2) format("woff2");
    unicode-range: u+00??, u+0131, u+0152-0153, u+02bb-02bc, u+02c6, u+02da, u+02dc, u+0304, u+0308, u+0329, u+2000-206f, u+20ac, u+2122, u+2191, u+2193, u+2212, u+2215, u+feff, u+fffd
}

@font-face {
    font-family: Geist Mono Fallback;
    src: local("Arial");
    ascent-override: 74.67%;
    descent-override: 21.92%;
    line-gap-override: 0.00%;
    size-adjust: 134.59%
}

.__className_9a8899 {
    font-family: Geist Mono, Geist Mono Fallback;
    font-style: normal
}

.__variable_9a8899 {
    --font-geist-mono: "Geist Mono", "Geist Mono Fallback"
}

/*! tailwindcss v4.1.5 | MIT License | https://tailwindcss.com */

@layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))) {
        *, ::backdrop, :after, :before {
            --tw-translate-x:0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-space-y-reverse: 0;
            --tw-space-x-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-ease: initial
        }
    }
}

@layer theme {
    :host,
    :root {
        --color-green-500: oklch(72.3% .219 149.579);
        --color-black: #000;
        --color-white: #fff;
        --spacing: .25rem;
        --container-6xl: 72rem;
        --text-xs: .75rem;
        --text-xs--line-height: calc(1/.75);
        --text-sm: .875rem;
        --text-sm--line-height: calc(1.25/.875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5/1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75/1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75/1.25);
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --ease-out: cubic-bezier(0, 0, .2, 1);
        --default-transition-duration: .15s;
        --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
        --default-font-family: var(--font-geist-sans);
        --default-mono-font-family: var(--font-geist-mono)
    }
}

@layer base {
    *,
    ::backdrop,
    :after,
    :before {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }
    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }
    :host,
    html {
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent
    }
    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px
    }
    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted
    }
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit
    }
    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit
    }
    b,
    strong {
        font-weight: bolder
    }
    code,
    kbd,
    pre,
    samp {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em
    }
    small {
        font-size: 80%
    }
    sub,
    sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative
    }
    sub {
        bottom: -.25em
    }
    sup {
        top: -.5em
    }
    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse
    }
    :-moz-focusring {
        outline: auto
    }
    progress {
        vertical-align: baseline
    }
    summary {
        display: list-item
    }
    menu,
    ol,
    ul {
        list-style: none
    }
    audio,
    canvas,
    embed,
    iframe,
    img,
    object,
    svg,
    video {
        vertical-align: middle;
        display: block
    }
    img,
    video {
        max-width: 100%;
        height: auto
    }
    button,
    input,
    optgroup,
    select,
    textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }
    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder
    }
    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px
    }
    ::file-selector-button {
        margin-inline-end: 4px
    }
    ::placeholder {
        opacity: 1
    }
    @supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px) {
        ::placeholder {
            color: currentColor
        }
        @supports (color:color-mix(in lab, red, red)) {
            ::placeholder {
                color: color-mix(in oklab, currentcolor 50%, transparent)
            }
        }
    }
    textarea {
        resize: vertical
    }
    ::-webkit-search-decoration {
        -webkit-appearance: none
    }
    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit
    }
    ::-webkit-datetime-edit {
        display: inline-flex
    }
    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0
    }
    ::-webkit-datetime-edit,
    ::-webkit-datetime-edit-year-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-month-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-minute-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-millisecond-field,
    ::-webkit-datetime-edit-second-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0
    }
    :-moz-ui-invalid {
        box-shadow: none
    }
    button,
    input:where([type=button], [type=reset], [type=submit]) {
        appearance: button
    }
    ::file-selector-button {
        appearance: button
    }
    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto
    }
    [hidden]:where(:not([hidden=until-found])) {
        display: none !important
    }
    * {
        border-color: var(--border);
        outline-color: var(--ring)
    }
    @supports (color:color-mix(in lab, red, red)) {
        * {
            outline-color: color-mix(in oklab, var(--ring)50%, transparent)
        }
    }
    body {
        background-color: var(--background);
        color: var(--foreground)
    }
}

@layer components;
@layer utilities {
    .absolute {
        position: absolute
    }
    .relative {
        position: relative
    }
    .top-1\/2 {
        top: 50%
    }
    .right-3 {
        right: calc(var(--spacing)*3)
    }
    .left-3 {
        left: calc(var(--spacing)*3)
    }
    .container {
        width: 100%
    }
    @media (min-width:40rem) {
        .container {
            max-width: 40rem
        }
    }
    @media (min-width:48rem) {
        .container {
            max-width: 48rem
        }
    }
    @media (min-width:64rem) {
        .container {
            max-width: 64rem
        }
    }
    @media (min-width:80rem) {
        .container {
            max-width: 80rem
        }
    }
    @media (min-width:96rem) {
        .container {
            max-width: 96rem
        }
    }
    .mx-auto {
        margin-inline: auto
    }
    .mt-2 {
        margin-top: calc(var(--spacing)*2)
    }
    .mt-4 {
        margin-top: calc(var(--spacing)*4)
    }
    .mb-1 {
        margin-bottom: calc(var(--spacing)*1)
    }
    .mb-2 {
        margin-bottom: calc(var(--spacing)*2)
    }
    .mb-4 {
        margin-bottom: calc(var(--spacing)*4)
    }
    .block {
        display: block
    }
    .flex {
        display: flex
    }
    .grid {
        display: grid
    }
    .inline-flex {
        display: inline-flex
    }
    .aspect-square {
        aspect-ratio: 1
    }
    .h-3\.5 {
        height: calc(var(--spacing)*3.5)
    }
    .h-4 {
        height: calc(var(--spacing)*4)
    }
    .h-6 {
        height: calc(var(--spacing)*6)
    }
    .h-8 {
        height: calc(var(--spacing)*8)
    }
    .h-9 {
        height: calc(var(--spacing)*9)
    }
    .h-10 {
        height: calc(var(--spacing)*10)
    }
    .h-40 {
        height: calc(var(--spacing)*40)
    }
    .min-h-screen {
        min-height: 100vh
    }
    .w-3\.5 {
        width: calc(var(--spacing)*3.5)
    }
    .w-4 {
        width: calc(var(--spacing)*4)
    }
    .w-6 {
        width: calc(var(--spacing)*6)
    }
    .w-9 {
        width: calc(var(--spacing)*9)
    }
    .w-12 {
        width: calc(var(--spacing)*12)
    }
    .w-full {
        width: 100%
    }
    .max-w-6xl {
        max-width: var(--container-6xl)
    }
    .flex-1 {
        flex: 1
    }
    .shrink-0 {
        flex-shrink: 0
    }
    .flex-grow {
        flex-grow: 1
    }
    .-translate-y-1\/2 {
        --tw-translate-y: calc(calc(1/2*100%)*-1);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }
    .grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr))
    }
    .grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr))
    }
    .flex-col {
        flex-direction: column
    }
    .items-center {
        align-items: center
    }
    .justify-center {
        justify-content: center
    }
    .gap-2 {
        gap: calc(var(--spacing)*2)
    }
    .gap-4 {
        gap: calc(var(--spacing)*4)
    }
    .gap-6 {
        gap: calc(var(--spacing)*6)
    }
    :where(.space-y-2>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*2)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*2)*calc(1 - var(--tw-space-y-reverse)))
    }
    :where(.space-y-4>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*4)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*4)*calc(1 - var(--tw-space-y-reverse)))
    }
    :where(.space-x-2>:not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing)*2)*var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing)*2)*calc(1 - var(--tw-space-x-reverse)))
    }
    :where(.space-x-6>:not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing)*6)*var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing)*6)*calc(1 - var(--tw-space-x-reverse)))
    }
    .overflow-hidden {
        overflow: hidden
    }
    .rounded-full {
        border-radius: 3.40282e+38px
    }
    .rounded-lg {
        border-radius: var(--radius)
    }
    .rounded-md {
        border-radius: calc(var(--radius) - 2px)
    }
    .rounded-sm {
        border-radius: calc(var(--radius) - 4px)
    }
    .border {
        border-style: var(--tw-border-style);
        border-width: 1px
    }
    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px
    }
    .border-\[\#E60000\] {
        border-color: #e60000
    }
    .border-input {
        border-color: var(--input)
    }
    .border-primary {
        border-color: var(--primary)
    }
    .bg-\[\#E60000\] {
        background-color: #e60000
    }
    .bg-background {
        background-color: var(--background)
    }
    .bg-destructive {
        background-color: var(--destructive)
    }
    .bg-primary {
        background-color: var(--primary)
    }
    .bg-secondary {
        background-color: var(--secondary)
    }
    .bg-transparent {
        background-color: #0000
    }
    .bg-white {
        background-color: var(--color-white)
    }
    .bg-gradient-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }
    .from-\[\#3B0B0B\] {
        --tw-gradient-from: #3b0b0b;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .to-\[\#2B0000\] {
        --tw-gradient-to: #2b0000;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .fill-primary {
        fill: var(--primary)
    }
    .p-4 {
        padding: calc(var(--spacing)*4)
    }
    .p-6 {
        padding: calc(var(--spacing)*6)
    }
    .px-3 {
        padding-inline: calc(var(--spacing)*3)
    }
    .px-4 {
        padding-inline: calc(var(--spacing)*4)
    }
    .px-8 {
        padding-inline: calc(var(--spacing)*8)
    }
    .py-1 {
        padding-block: calc(var(--spacing)*1)
    }
    .py-2 {
        padding-block: calc(var(--spacing)*2)
    }
    .py-6 {
        padding-block: calc(var(--spacing)*6)
    }
    .pr-8 {
        padding-right: calc(var(--spacing)*8)
    }
    .pl-6 {
        padding-left: calc(var(--spacing)*6)
    }
    .pl-10 {
        padding-left: calc(var(--spacing)*10)
    }
    .text-center {
        text-align: center
    }
    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height))
    }
    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height))
    }
    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height))
    }
    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height))
    }
    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height))
    }
    .leading-none {
        --tw-leading: 1;
        line-height: 1
    }
    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium)
    }
    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold)
    }
    .whitespace-nowrap {
        white-space: nowrap
    }
    .text-\[\#E60000\] {
        color: #e60000
    }
    .text-black {
        color: var(--color-black)
    }
    .text-current {
        color: currentColor
    }
    .text-green-500 {
        color: var(--color-green-500)
    }
    .text-primary {
        color: var(--primary)
    }
    .text-primary-foreground {
        color: var(--primary-foreground)
    }
    .text-secondary-foreground {
        color: var(--secondary-foreground)
    }
    .text-white {
        color: var(--color-white)
    }
    .underline-offset-4 {
        text-underline-offset: 4px
    }
    .antialiased {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale
    }
    .shadow,
    .shadow-sm {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a)
    }
    .ring,
    .shadow,
    .shadow-sm {
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .ring {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor)
    }
    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px
    }
    .transition-colors {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }
    .ease-out {
        --tw-ease: var(--ease-out);
        transition-timing-function: var(--ease-out)
    }
    .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled~*) {
        cursor: not-allowed
    }
    .peer-disabled\:opacity-70:is(:where(.peer):disabled~*) {
        opacity: .7
    }
    .file\:border-0::file-selector-button {
        border-style: var(--tw-border-style);
        border-width: 0
    }
    .file\:bg-transparent::file-selector-button {
        background-color: #0000
    }
    .file\:text-sm::file-selector-button {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height))
    }
    .file\:font-medium::file-selector-button {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium)
    }
    .file\:text-foreground::file-selector-button {
        color: var(--foreground)
    }
    .placeholder\:text-muted-foreground::placeholder {
        color: var(--muted-foreground)
    }
    @media (hover:hover) {
        .hover\:bg-\[\#cc0000\]:hover {
            background-color: #c00
        }
        .hover\:bg-accent:hover {
            background-color: var(--accent)
        }
        .hover\:bg-destructive\/90:hover {
            background-color: var(--destructive)
        }
        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-destructive\/90:hover {
                background-color: color-mix(in oklab, var(--destructive)90%, transparent)
            }
        }
        .hover\:bg-primary\/90:hover {
            background-color: var(--primary)
        }
        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-primary\/90:hover {
                background-color: color-mix(in oklab, var(--primary)90%, transparent)
            }
        }
        .hover\:bg-secondary\/80:hover {
            background-color: var(--secondary)
        }
        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-secondary\/80:hover {
                background-color: color-mix(in oklab, var(--secondary)80%, transparent)
            }
        }
        .hover\:text-\[\#E60000\]:hover {
            color: #e60000
        }
        .hover\:text-accent-foreground:hover {
            color: var(--accent-foreground)
        }
        .hover\:underline:hover {
            text-decoration-line: underline
        }
    }
    .focus\:outline-none:focus {
        --tw-outline-style: none;
        outline-style: none
    }
    .focus-visible\:ring-1:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .focus-visible\:ring-ring:focus-visible {
        --tw-ring-color: var(--ring)
    }
    .focus-visible\:outline-none:focus-visible {
        --tw-outline-style: none;
        outline-style: none
    }
    .disabled\:pointer-events-none:disabled {
        pointer-events: none
    }
    .disabled\:cursor-not-allowed:disabled {
        cursor: not-allowed
    }
    .disabled\:opacity-50:disabled {
        opacity: .5
    }
    .data-\[state\=checked\]\:bg-\[\#E60000\][data-state=checked] {
        background-color: #e60000
    }
    .data-\[state\=checked\]\:bg-primary[data-state=checked] {
        background-color: var(--primary)
    }
    .data-\[state\=checked\]\:text-primary-foreground[data-state=checked] {
        color: var(--primary-foreground)
    }
    @media (min-width:48rem) {
        .md\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr))
        }
        .md\:p-8 {
            padding: calc(var(--spacing)*8)
        }
        .md\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height))
        }
    }
    @media (min-width:64rem) {
        .lg\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr))
        }
    }
    .\[\&_svg\]\:pointer-events-none svg {
        pointer-events: none
    }
    .\[\&_svg\]\:size-4 svg {
        width: calc(var(--spacing)*4);
        height: calc(var(--spacing)*4)
    }
    .\[\&_svg\]\:shrink-0 svg {
        flex-shrink: 0
    }
}

:root {
    --radius: .625rem;
    --background: #fff;
    --foreground: #1a1a1a;
    --card: #fff;
    --card-foreground: #1a1a1a;
    --popover: #fff;
    --popover-foreground: #1a1a1a;
    --primary: #e60000;
    --primary-foreground: #fff;
    --secondary: #1a1a1a;
    --secondary-foreground: #fff;
    --muted: #f3f3f3;
    --muted-foreground: #666;
    --accent: #2b0000;
    --accent-foreground: #fff;
    --destructive: #e60000;
    --border: #e0e0e0;
    --input: #e0e0e0;
    --ring: #e60000;
    --chart-1: #e60000;
    --chart-2: #2b0000;
    --chart-3: #3b0b0b;
    --chart-4: #fff;
    --chart-5: #1a1a1a;
    --sidebar: #fff;
    --sidebar-foreground: #1a1a1a;
    --sidebar-primary: #e60000;
    --sidebar-primary-foreground: #fff;
    --sidebar-accent: #2b0000;
    --sidebar-accent-foreground: #fff;
    --sidebar-border: #e0e0e0;
    --sidebar-ring: #e60000
}

.dark {
    --background: #2b0000;
    --foreground: #fff;
    --card: #3b0b0b;
    --card-foreground: #fff;
    --popover: #3b0b0b;
    --popover-foreground: #fff;
    --primary: #e60000;
    --primary-foreground: #fff;
    --secondary: #1a1a1a;
    --secondary-foreground: #fff;
    --muted: #1a1a1a;
    --muted-foreground: #a3a3a3;
    --accent: #3b0b0b;
    --accent-foreground: #fff;
    --destructive: #e60000;
    --border: #ffffff1a;
    --input: #ffffff26;
    --ring: #e60000;
    --chart-1: #e60000;
    --chart-2: #fff;
    --chart-3: #3b0b0b;
    --chart-4: #2b0000;
    --chart-5: #1a1a1a;
    --sidebar: #3b0b0b;
    --sidebar-foreground: #fff;
    --sidebar-primary: #e60000;
    --sidebar-primary-foreground: #fff;
    --sidebar-accent: #1a1a1a;
    --sidebar-accent-foreground: #fff;
    --sidebar-border: #ffffff1a;
    --sidebar-ring: #e60000
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-leading {
    syntax: "*";
    inherits: false
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-ease {
    syntax: "*";
    inherits: false
}